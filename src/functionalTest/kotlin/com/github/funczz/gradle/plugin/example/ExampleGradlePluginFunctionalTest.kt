/*
 * This Kotlin source file was generated by the Gradle 'init' task.
 */
package com.github.funczz.gradle.plugin.example

import io.kotlintest.matchers.string.shouldContain
import io.kotlintest.specs.StringSpec
import org.gradle.testkit.runner.GradleRunner
import java.io.File

/**
 * A simple functional test for the plugin.
 */
class ExampleGradlePluginFunctionalTest : StringSpec() {

    private val groovyTaskBlock = """
        task example { doLast { println 'hello world.' } }
    """.trimIndent()

    private val groovyPluginsBlock = """
        plugins {
            id('com.github.funczz.gradle.plugin.example-gradle-plugin')
        }
        """.trimIndent()

    private val kotlinTaskBlock = """
        val example by tasks.creating() { doLast { println("hello world.") } }
    """.trimIndent()

    private val kotlinPluginsBlock = """
        plugins {
            id("com.github.funczz.gradle.plugin.example-gradle-plugin")
        }
        """.trimIndent()

    init {

        "can run task using Kotlin-DSL" {
            // Setup the test build
            val projectDir = File("build/functionalTest")
            projectDir.mkdirs()
            projectDir.resolve("settings.gradle.kts").writeText("")
            projectDir.resolve("build.gradle.kts").writeText(kotlinPluginsBlock)

            // Run the build
            val runner = GradleRunner.create().apply {
                withProjectDir(projectDir)
                withPluginClasspath()
                withDebug(true)
                forwardOutput()
                withArguments("example")
            }
            val result = runner.build()

            // Verify the result
            result.output shouldContain "hello world."
        }
    }
}
